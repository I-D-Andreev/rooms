python3 manage.py runserver

python3 manage.py startapp hello_world

python3 manage.py makemigrations

python3 manage.py migrate

python3 manage.py shell

python3 manage.py createsuperuser

Initialize DB:
    python manage.py migrate --skip-checks (skip checks used as django traverses URLs otherwise)

For shell:
from django.contrib.auth.models import User
User.objects.all()

For seeding:

Dump the User models
    python manage.py dumpdata --indent 2 auth.user > seeding/user.json
    python manage.py dumpdata --indent 2 auth > seeding/auth.json  (better dump whole auth as it also includes groups and permissions)


Dump whole database
    python manage.py  dumpdata > db.json
    Note that I found:
        python manage.py dumpdata --exclude auth.permission --exclude contenttypes > db.json
        https://coderwall.com/p/mvsoyg/django-dumpdata-and-loaddata

Load Database:
    python manage.py loaddata seeding/user.json



Setup MySQL database:
https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-18-04
https://pypi.org/project/mysqlclient/ (for me, needed only default-libmysqlclient-dev)


Access from phone/other PCs:
    - Must be on the same network
    - python manage.py runserver 192.168.1.197:8000 (need to have the address added in settings.py under ALLOWED_HOSTS)
    - then navigate to 192.168.1.197:8000 in browser


Livereload | django-livereload-server | https://github.com/tjwalch/django-livereload-server
    - needs 2 terminals
    - python manage.py Livereload
    - python manage.py runserver